DNS (Domain Name System) — это система доменных имён, которая связывает названия сайтов (доменов)
с IP-адресами компьютеров, соответствующих этим доменам. 

Одному домену могут соответствовать несколько IP-адресов.

Одному IP-адресу может соответствовать несколько доменов.

HTTP (HyperText Transfer Protocol, «протокол передачи гипертекста») – набор правил передачи информации между браузером клиента 
и сервером сайта, изначально предназначенный для передачи гипертекстовых документов (документов, которые
могут содержать ссылки, позволяющие организовать переход к другим документам).

Задача, которая традиционно решается с помощью протокола HTTP — обмен данными между пользовательским приложением, 
доступ к веб-ресурсам (обычно это веб-браузер) и веб-сервером.
Клиентское приложение формирует запрос и отправляет его на сервер, после чего серверное программное 
обеспечение обрабатывает данный запрос, формирует ответ и передаёт его обратно клиенту. 
После этого клиентское приложение может продолжить отправлять другие запросы, которые будут обработаны аналогичным образом.
Также HTTP часто используется как протокол передачи информации для других протоколов прикладного уровня, в таком случае говорят, 
что протокол HTTP используется как «транспорт».
В соответствии со спецификацией OSI, HTTP является протоколом прикладного (верхнего, 7-го) уровня.
HTTP – открытый протокол передачи данных и не предполагает использование шифрования для передачи информации. 

Для HTTP есть расширение HTTPS (HyperText Transfer Protocol Secure), которое реализует упаковку передаваемых данных в шифровальный 
протокол SSL или TLS. HTTPS широко используется для защиты информации от перехвата.

HTPP по умолчанию использует 80 порт, чаще всего используется для ресурсов информационного или 
развлекательного характера,где безопасность не является принципиальным вопросом. 
Данные, передаваемые по HTTP, меньше по объёму, поэтому их передача в обе стороны занимает чуть меньше времени.

HTTPS использует порт 443, отображается в браузере возле домена знаком замочка.
Используется там, где требуется конфеденциальная передача данных: в интернет-магазинах, электронных платежных системах, 
транспортных компаниях и т.п.

Протокол HTTP предполагает достаточно большое количество возможностей для расширения.
1991г. - HTTP/0.9 
HTTP был предложен в марте 1991 года Тимом Бернерсом-Ли, как механизм для доступа к документам в Интернете и облегчения навигации посредством
использования гипертекста. 
Спецификация протокола привела к упорядочению правил взаимодействия между клиентами и серверами HTTP, а также чёткому
разделению функций между этими двумя компонентами. Были задокументированы основные синтаксические и семантические положения.
1996г. HTTP/1.0
В мае 1996 года для практической реализации HTTP был выпущен информационный документ RFC 1945, что послужило основой для реализации большинства 
компонентов HTTP/1.0. В HTTP/1.0 клиент должен был разрывать и снова создавать TCP-соединение для каждого нового запроса, что затратно с точки зрения времени и ресурсов.
1999г. HTTP/1.1
HTTP/1.1 устраняет эту проблему через постоянные соединения и конвейерную обработку (pipelining). HTTP/1.1 предполагает, что TCP-соединение должно оставаться открытым,
если закрытие не указано прямо. Это позволяет клиенту отправлять несколько запросов по одному и тому же соединению, не дожидаясь ответа на каждый запрос, что значительно 
повышает производительность по сравнению с HTTP/1.0.
К сожалению, в этой стратегии оптимизации есть узкое место. Поскольку при отправке в один и тот же пункт назначения несколько пакетов данных не могут проходить друг через 
друга, возникают ситуации, когда запрос в начале очереди, который не может извлечь требуемый ресурс, блокирует все запросы, находящиеся за ним. Это называется блокировкой 
очереди (head-of-line blocking, или HOL) и представляет собой серьезную проблему оптимизации эффективности соединения в HTTP/1.1.
2015г. HTTP/2
С технической точки зрения, одной из наиболее важных особенностей, которые отличают HTTP/1.1 и HTTP/2, является двоичный уровень кадрирования, при этом сохраняя семантику 
HTTP (методы, заголовки). API прикладного уровня по-прежнему создает сообщения в обычных форматах HTTP, но нижележащий уровень преобразовывает эти сообщения в двоичные. 
Благодаря этому веб-приложения, созданные до HTTP/2, могут продолжать работать как обычно при взаимодействии с новым протоколом.
Также часть улучшений получена за счёт мультиплексирования запросов и ответов (для преодоления проблемы «head-of-line blocking» протоколов HTTP/1.x), а также за счёт сжатия 
передаваемых заголовков, введения явной приоритизации запросов, загрузке нескольких элементов параллельно посредством одного TCP-соединения. 

2019г. HTTP/3
Поддержка HTTP/3 была добавлена в Cloudflare и Google Chrome в сентябре 2019 года
HTTP/3 — новый синтаксис HTTP, который работает на IETF QUIC, мультиплексированном и безопасном транспорте на основе UDP.
 






